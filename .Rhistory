space<-cat("\n","\n")
#Category Subset
psub<-subset(p,Category=="Animals")
c
#Printing Category
cat("#"," **", c, "** ",sep="")
space
categories<-c("Animals")
space<-cat("\n","\n")
space
space<-c("\n","\n")
cat(space)
#Setting up for three columns
n<-match(c,categories)
threes<-seq(3,length(psub$Category),by=3)
psub
which(p$Filename==psub$Filename)
#Category Subset
psub<-subset(p,Category==c)
threes<-seq(3,length(psub$Category),by=3)
threes
#Vector for which picture to start new columns
threes<-seq(1,length(psub$Category),by=3)
row<-"'row'"
row
row<-'"row"'
row
row<-"'row'"
col<-"'col-sm-4'"
col
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
cat(div_class,row,">")
div_class_row<-paste(div_class,row,">",sep=="")
library(readxl)
p<-read_excel("portfolio.xlsx",sheet="portfolio")
categories<-c("Animals")
space<-c("\n","\n")
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
div<-"</div>"
div_class_row<-paste(div_class,row,">",sep="")
for (c in categories){
#Category Subset
psub<-subset(p,Category==c)
#Vector for which picture to start new rows in output
threes<-seq(1,length(psub$Category),by=3)
#Printing Category Title
cat("#"," **", c, "** ",space,sep="")
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If row is one of the desired new rows, make new row, else just a new column.
if (r %in% threes) {
} else {
}
#Subset Vectors
desc<-e$Description
photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){height: 200px;}",sep="")
cat(space,photo,space,div)
}
cat(space)
}
div_class_row<-paste(div_class,row,">",sep="")
div_class_row
div_class_col<-paste(div_Class,col,">",sep="")
div_class_col<-paste(div_class,col,">",sep="")
div_class_col
cat(div_class_row)
div_class_row
cat(div_class_row,space,div_class_col)
cat(div_class_col)
library(readxl)
p<-read_excel("portfolio.xlsx",sheet="portfolio")
#Vectors for HTML and Looping
categories<-c("Animals")
space<-c("\n","\n")
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
div<-"</div>"
div_class_row<-paste(div_class,row,">",sep="")
div_class_col<-paste(div_class,col,">",sep="")
cat(div_class_row)
#Category Subset
psub<-subset(p,Category==c)
#Vector for which picture to start new rows in output
threes<-seq(1,length(psub$Category),by=3)
#Printing Category Title
cat("#"," **", c, "** ",space,sep="")
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If row is one of the desired new rows, make new row, else just a new column.
if (r %in% threes) {
cat(div_class_row,space,div_class_col)
} else {
cat(div_class_col)
}
#Subset Vectors
desc<-e$Description
photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){height: 200px;}",sep="")
#Print Photo in col/row and end section
cat(space,photo,space,div)
}
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If row is one of the desired new rows, make new row, else just a new column.
if (r %in% threes) {
cat(div_class_row,space,div_class_col)
} else {
cat(div_class_col)
}
#Subset Vectors
desc<-e$Description
photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){height: 200px;}",sep="")
#Print Photo in col/row and end section
cat(space,photo,space,div,space)
}
photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){width: 200px;}",sep="")
#Print Photo in col/row and end section
cat(space,photo,space,div,space)
photo<-paste("portfolio/",e$Filename,".jpg",sep="")
photo
#photo<-paste("portfolio/",e$Filename,".jpg",sep="")
photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){width=50%}",sep="")
#photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){width=50%}",sep="")
image<-paste("<img src=",photo,"width='200'","height='200'")
image
photo<-paste("portfolio/",e$Filename,".jpg",sep="")
#photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){width=50%}",sep="")
image<-paste("<img src=",photo,"width='200'","height='200'")
image
#Print Photo in col/row and end section
cat(space,image,space,div,space)
#photo<-paste("![",desc,"](portfolio/",e$Filename,".jpg){width=50%}",sep="")
image<-paste("<img src=",photo,"width='200'","height='200'>")
#Print Photo in col/row and end section
cat(space,image,space,div,space)
#Print Photo in col/row and end section
cat(space,image,space,desc,div,space)
center<-"'center-cropped'"
link<-paste(a_link,photo,">")
a_link<-"<a href="
a<-"</a>"
link<-paste(a_link,photo,">",sep="")
link
p<-read_excel("portfolio.xlsx",sheet="portfolio")
#Vectors for HTML and Looping
categories<-c("Animals")
space<-c("\n","\n")
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
a_link<-"<a href="
a<-"</a>"
div_class_row<-paste(div_class,row,">",sep="")
div_class_col<-paste(div_class,col,">",sep="")
for (c in categories){
#Category Subset
psub<-subset(p,Category==c)
#Vector for which picture to start new rows in output
threes<-seq(1,length(psub$Category),by=3)
#Printing Category Title
cat("#"," **", c, "** ",space,sep="")
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If row is one of the desired new rows, make new row, else just a new column.
if (r %in% threes) {
cat(div_class_row,space,div_class_col)
} else {
cat(div_class_col)
}
#Subset Vectors
desc<-paste("<i>",e$Title,"</i>")
photo<-paste("portfolio/",e$Filename,".jpg",sep="")
image<-paste("<img class='center-cropped' src=",photo,">")
link<-paste(a_link,photo,">",sep="")
#Print Photo in col/row and end section
cat(space,link,image,a,space,desc,div,space)
}
cat(space)
}
t_s<-"<table>"
tr_s<-"<tr>"
tr_e<-"</tr>"
td_s<-"<td>"
td_e<-"</td>"
t_e<-"</table>"
#Vector for which picture to start new rows in output
s<-seq(1,length(psub$Category),by=3)
e<-seq(3,length(psub$Category),by=3)
s
e
library(readxl)
p<-read_excel("portfolio.xlsx",sheet="portfolio")
#Vectors for HTML and Looping
categories<-c("Animals")
space<-c("\n","\n")
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
div<-"</div>"
a_link<-"<a href="
a<-"</a>"
a<-"</a>"
t_s<-"<table>"
tr_e<-"</tr>"
td_s<-"<td>"
t_e<-"</table>"
div_class_row<-paste(div_class,row,">",sep="")
div_class_col<-paste(div_class,col,">",sep="")
#Looping Through Each Category
for (c in categories){
#Category Subset
psub<-subset(p,Category==c)
#Vector for which picture to start new rows in output
s<-seq(1,length(psub$Category),by=3)
e<-seq(3,length(psub$Category),by=3)
#Printing Category Title
cat("#"," **", c, "** ",space,sep="")
cat(t_s)
#Looping Through Each Entry Row
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If entry is one of the desired new rows, make new row, else just a new column.
if (r %in% s) {
#cat(div_class_row,space,div_class_col)
cat(tr_s,space,td_s)
} else {
#cat(div_class_col)
cat(td_s)
}
#Subset Vectors
desc<-paste("<i>",e$Title,"</i>")
photo<-paste("portfolio/",e$Filename,".jpg",sep="")
image<-paste("<img class='center-cropped' src=",photo,">")
link<-paste(a_link,photo,">",sep="")
#Print Photo in col/row and end section
#cat(space,link,image,a,space,desc,div,space)
cat(space,link,image,a,space,desc,td_e,space)
#If entry is one of the ends of the rows, make new row, else do nothing.
if (r %in% e) {
cat(tr_e,space)
} else {}
}
cat(t_e)
cat(space)
}
library(readxl)
p<-read_excel("portfolio.xlsx",sheet="portfolio")
#Vectors for HTML and Looping
categories<-c("Animals")
space<-c("\n","\n")
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
div<-"</div>"
a_link<-"<a href="
a<-"</a>"
t_s<-"<table>"
tr_s<-"<tr>"
tr_e<-"</tr>"
td_s<-"<td>"
td_e<-"</td>"
t_e<-"</table>"
div_class_row<-paste(div_class,row,">",sep="")
div_class_col<-paste(div_class,col,">",sep="")
#Looping Through Each Category
for (c in categories){
#Category Subset
psub<-subset(p,Category==c)
#Vector for which picture to start new rows in output
s<-seq(1,length(psub$Category),by=3)
e<-seq(3,length(psub$Category),by=3)
#Printing Category Title
cat("#"," **", c, "** ",space,sep="")
cat(t_s,space)
#Looping Through Each Entry Row
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If entry is one of the desired new rows, make new row, else just a new column.
if (r %in% s) {
#cat(div_class_row,space,div_class_col)
cat(tr_s,space,td_s)
} else {
#cat(div_class_col)
cat(td_s)
}
#Subset Vectors
desc<-paste("<i>",e$Title,"</i>")
photo<-paste("portfolio/",e$Filename,".jpg",sep="")
image<-paste("<img class='center-cropped' src=",photo,">")
link<-paste(a_link,photo,">",sep="")
#Print Photo in col/row and end section
#cat(space,link,image,a,space,desc,div,space)
cat(space,link,image,a,space,desc,space,td_e,space)
#If entry is one of the ends of the rows, make new row, else do nothing.
if (r %in% e) {
cat(tr_e,space)
} else {}
}
cat(t_e)
cat(space)
}
p<-read_excel("portfolio.xlsx",sheet="portfolio")
#Vectors for HTML and Looping
categories<-c("Animals")
space<-c("\n","\n")
div_class<-"<div class ="
row<-"'row'"
col<-"'col-sm-4'"
div<-"</div>"
a_link<-"<a href="
a<-"</a>"
t_s<-"<table>"
tr_s<-"<tr>"
tr_e<-"</tr>"
td_s<-"<td>"
td_e<-"</td>"
t_e<-"</table>"
div_class_row<-paste(div_class,row,">",sep="")
div_class_col<-paste(div_class,col,">",sep="")
#Looping Through Each Category
for (c in categories){
#Category Subset
psub<-subset(p,Category==c)
#Vector for which picture to start new rows in output
s<-seq(1,length(psub$Category),by=3)
e<-seq(3,length(psub$Category),by=3)
#Printing Category Title
cat("#"," **", c, "** ",space,sep="")
cat(t_s,space)
#Looping Through Each Entry Row
for (r in 1:nrow(psub)){
#Entry Subset
e<-psub[r,]
#If entry is one of the desired new rows, make new row, else just a new column.
if (r %in% s) {
#cat(div_class_row,space,div_class_col)
cat(tr_s,space,td_s)
} else {
#cat(div_class_col)
cat(td_s)
}
#Subset Vectors
desc<-paste("<i>",e$Title,"</i>")
photo<-paste("portfolio/",e$Filename,".jpg",sep="")
image<-paste("<img class='center-cropped' src=",photo,">")
link<-paste(a_link,photo,">",sep="")
#Print Photo in col/row and end section
#cat(space,link,image,a,space,desc,div,space)
cat(link,image,a,space,desc,td_e)
#If entry is one of the ends of the rows, make new row, else do nothing.
if (r %in% e) {
cat(tr_e,space)
} else {}
}
cat(t_e)
cat(space)
}
knitr::opts_chunk$set(echo = TRUE)
#Vectors for HTML and Looping
categories<-levels(as.factor(p$Category))
categories
#Admin####
library(readxl)
images<-levels(as.factor(p$Filename))
images<-interaction(levels(as.factor(p$Filename)),"jpg")
images
images<-interaction(levels(as.factor(p$Filename)),"jpeg")
images
images<-c(interaction(levels(as.factor(p$Filename)),"jpeg"))
images
images<-as.vector(interaction(levels(as.factor(p$Filename)),"jpeg"))
images
library(jpeg)
install.packages("jpeg")
i=images[1]
i
input_name<-paste(input,i,sep="")
input<-"portfolio/"
output<-"portfolio_thumb/"
x<-readJPEG(input_name)
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
x<-readJPEG(input_name)
library(jpeg)
x<-readJPEG(input_name)
#Vectors & Data####
p<-read_excel("portfolio.xlsx",sheet="portfolio")
p<-subset(p,Include=="Yes")
#Vectors & Data####
p<-read_excel("portfolio.xlsx",sheet="portfolio")
p<-subset(p,Include=="Yes")
images<-as.vector(interaction(levels(as.factor(p$Filename)),"jpeg"))
input<-"portfolio/"
output<-"portfolio_thumb/"
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
x<-readJPEG(input_name)
View(p)
images<-as.vector(interaction(levels(as.factor(p$Filename)),"jpeg"))
length(images)
images
i=images[1]
i
x<-readJPEG(input_name)
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
x<-readJPEG(input_name)
#Vectors & Data####
p<-read_excel("portfolio.xlsx",sheet="portfolio")
p<-subset(p,Include=="Yes")
images<-as.vector(interaction(levels(as.factor(p$Filename)),"jpg"))
input<-"portfolio/"
output<-"portfolio_thumb/"
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
x<-readJPEG(input_name)
i=images[1]
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
x<-readJPEG(input_name)
library(EBImage)
install.packages("EBImage")
install.packages("imager")
x<-load.image(input_name)
library(imager)
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
x<-load.image(input_name)
im<-load.image(input_name)
plot(im)
im<-load.image(input_name)
width(im)
width(im);height(im)
w<-width(im)
h<-height(im)
thmb<-resize(im,round(w/10),round(h/10))
plot(thmb)
save.image(thmb,output_name)
for(i in images){
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
im<-load.image(input_name)
w<-width(im)
h<-height(im)
thmb<-resize(im,round(w/10),round(h/10))
plot(thmb)
save.image(thmb,output_name)
}
---
title: "Contact"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(icons)
```
<style type="text/css">
.title {
display: none;
}
</style>
<div class = "header">
## **Daryl Moore - Canadian Artist**
Ontario, Canada
e-mail: darylmoore1313@gmail.com
```{r echo = F}
icon_style(fontawesome$brands$instagram,scale=5)
```
[instagram](https://www.instagram.com/mooremanordesigns/)
```{r echo=F}
icon_style(fontawesome$brands$etsy,scale=5)
```
[etsy](https://www.etsy.com/shop/MooreManorDesigns)
Last Updated:
```{r,results="asis",echo=F}
cat(format(Sys.time(),"%c"))
```
[GitHub Source](https://github.com/zacharymilosmoore/mooremanordesigns)
#Code to Resize Images from Larger jpegs to Thumbnails
#Admin####
library(readxl)
library(imager)
#Vectors & Data####
p<-read_excel("portfolio.xlsx",sheet="portfolio")
p<-subset(p,Include=="Yes")
images<-as.vector(interaction(levels(as.factor(p$Filename)),"jpg"))
input<-"portfolio/"
output<-"portfolio_thumb/"
#Loop Through Images
for(i in images){
input_name<-paste(input,i,sep="")
output_name<-paste(output,i,sep="")
im<-load.image(input_name)
w<-width(im)
h<-height(im)
thmb<-resize(im,round(w/10),round(h/10))
save.image(thmb,output_name)
}
file.exists(paste("portfolio_thumb",images,".jpg",sep=""))
file.exists(paste("portfolio_thumb/",images,sep=""))
images<-images[which(file.exists(paste("portfolio_thumb/",images,sep=""))==T)]
images
